# Add truecolor support
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set-option -ga terminal-overrides ",xterm-256color-italic:Tc"
# TEST ITALICS:
# echo `tput sitm`italics`tput ritm`
# start a non-login shell using your default shell
set -g default-command $SHELL
set-window-option -g aggressive-resize on

# Default terminal is 256 colors
#https://apple.stackexchange.com/questions/249307/tic-doesnt-read-from-stdin-and-segfaults-when-adding-terminfo-to-support-italic/249385#249385
set -g default-terminal "tmux-256color-italic"
# set mouse availability
set -g mouse on
# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1
# rebind special to Ctrl-x
set -g prefix C-x
# List of plugins
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
#set -g pane-active-border-style fg=magenta
#set -g pane-border-style fg=green
#set -g pane-border-style bg=default
set -g pane-active-border-style bg=default,fg=magenta
set -g pane-border-style fg=green
set-window-option -g xterm-keys on
set-window-option -g aggressive-resize
set-window-option -g mode-keys vi
set -sg escape-time 0
# set -g status-right  " \"#{=22:pane_title}\" %H:%M %d-%b-%y"
# set -g status-left  "[#S|#P]"

bind > if-shell -F "#{window_zoomed_flag}"  'select-pane -t :.+; resize-pane -Z'     'select-pane -t :.+'
bind < if-shell -F "#{window_zoomed_flag}"  'select-pane -t :.-; resize-pane -Z'     'select-pane -t :.-'

bind R                                      \
    move-window -r\;                        \
    display-message "Windows reordered..."
bind | split-window -h -c "#{pane_current_path}"

bind - split-window -v -c "#{pane_current_path}"
vim_navigation_timeout=0.05 # number of seconds we give Vim to navigate
navigate='                                                             \
  pane_is_zoomed() {                                                   \
    test #{window_zoomed_flag} -eq 1;                                  \
  };                                                                   \
  pane_title_changed() {                                               \
    test "#{pane_title}" != "$(tmux display -p "##{pane_title}")";     \
  };                                                                   \
  command_is_vim() {                                                   \
    case "${1%% *}" in                                                 \
      (vi|?vi|vim*|?vim*|view|?view|vi??*) true ;;                     \
      (*) false ;;                                                     \
    esac;                                                              \
  };                                                                   \
  pane_contains_vim() {                                                \
    case "#{=3:pane_current_command}" in                               \
      (ssh|sh) command_is_vim "#{=5:pane_title}" ;;                    \
      (*) command_is_vim "#{=5:pane_current_command}" ;;               \
    esac;                                                              \
  };                                                                   \
  pane_contains_neovim_terminal() {                                    \
    test "#{=12:pane_title}" = "nvim term://";                         \
  };                                                                   \
  navigate() {                                                         \
    tmux_navigation_command=$1;                                        \
    vim_navigation_command=$2;                                         \
    vim_navigation_only_if=${3:-true};                                 \
    if pane_contains_vim && eval "$vim_navigation_only_if"; then       \
      if pane_contains_neovim_terminal; then                           \
        tmux send-keys C-\\ C-n;                                       \
      fi;                                                              \
      eval "$vim_navigation_command";                                  \
      if ! pane_is_zoomed; then                                        \
        sleep $vim_navigation_timeout; : wait for Vim to change title; \
        if ! pane_title_changed; then                                  \
          eval "$tmux_navigation_command";                             \
        fi;                                                            \
      fi;                                                              \
    elif ! pane_is_zoomed; then                                        \
      eval "$tmux_navigation_command";                                 \
    fi;                                                                \
  };                                                                   \
navigate '
navigate_left=" $navigate 'tmux select-pane -L'  'tmux send-keys C-w h'"
navigate_down=" $navigate 'tmux select-pane -D'  'tmux send-keys C-w j'"
navigate_up="   $navigate 'tmux select-pane -U'  'tmux send-keys C-w k'"
navigate_right="$navigate 'tmux select-pane -R'  'tmux send-keys C-w l'"
navigate_back=" $navigate 'tmux select-pane -l || tmux select-pane -t1'\
                          'tmux send-keys C-w p'                       \
                          'pane_is_zoomed'                             "

# QWERTY keys - comment these out if you don't use QWERTY layout!
bind-key -n M-h run-shell -b "$navigate_left"
bind-key -n M-j run-shell -b "$navigate_down"
bind-key -n M-k run-shell -b "$navigate_up"
bind-key -n M-l run-shell -b "$navigate_right"
bind-key -n M-\ run-shell -b "$navigate_back"

# bind-key -n M-h select-pane -L
bind-key -n C-n setw -g mode-keys vi
# bind-key -n C-j select-pane -D

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.tmux/plugins/tpm/tpm'
