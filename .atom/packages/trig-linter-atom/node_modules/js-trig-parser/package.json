{
  "_args": [
    [
      {
        "raw": "js-trig-parser@git+https://github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
        "scope": null,
        "escapedName": "js-trig-parser",
        "name": "js-trig-parser",
        "rawSpec": "git+https://github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
        "spec": "git+https://github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:cambridgesemantics/js-trig-parser.git#validation-fixes",
          "sshUrl": "git+ssh://git@github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
          "httpsUrl": "git+https://github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
          "gitUrl": "git://github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
          "shortcut": "github:cambridgesemantics/js-trig-parser#validation-fixes",
          "directUrl": "https://raw.githubusercontent.com/cambridgesemantics/js-trig-parser/validation-fixes/package.json"
        }
      },
      "/private/var/folders/62/bjb2t_m14771wz6rnmw3h9kh0000gn/T/d-118729-10684-1ds8xst.e79dq2gldi/package.tgz"
    ]
  ],
  "_from": "git+https://github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
  "_id": "js-trig-parser@0.3.5",
  "_inCache": true,
  "_location": "/trig-linter-atom/js-trig-parser",
  "_phantomChildren": {},
  "_requested": {
    "raw": "js-trig-parser@git+https://github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
    "scope": null,
    "escapedName": "js-trig-parser",
    "name": "js-trig-parser",
    "rawSpec": "git+https://github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
    "spec": "git+https://github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:cambridgesemantics/js-trig-parser.git#validation-fixes",
      "sshUrl": "git+ssh://git@github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
      "httpsUrl": "git+https://github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
      "gitUrl": "git://github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
      "shortcut": "github:cambridgesemantics/js-trig-parser#validation-fixes",
      "directUrl": "https://raw.githubusercontent.com/cambridgesemantics/js-trig-parser/validation-fixes/package.json"
    }
  },
  "_requiredBy": [
    "/trig-linter-atom"
  ],
  "_resolved": "git+https://github.com/cambridgesemantics/js-trig-parser.git#c89e7b7d15fddc325dfd6d868275c73323e0ed3d",
  "_shasum": "f6284d30e57789b87d641a32c584d7c6e0c3859f",
  "_shrinkwrap": null,
  "_spec": "js-trig-parser@git+https://github.com/cambridgesemantics/js-trig-parser.git#validation-fixes",
  "_where": "/private/var/folders/62/bjb2t_m14771wz6rnmw3h9kh0000gn/T/d-118729-10684-1ds8xst.e79dq2gldi/package.tgz",
  "author": {
    "name": "Chris Borodic"
  },
  "bugs": {
    "url": "https://github.com/cambridgesemantics/js-trig-parser/issues"
  },
  "dependencies": {
    "antlr4": "^4.5.3",
    "moment": "^2.14.1",
    "uuid": "^3.0.0"
  },
  "description": "antlr4 based JS trig parser",
  "devDependencies": {
    "antlr4": "^4.6.0",
    "chai": "^3.5.0",
    "mocha": "^3.0.2",
    "recursive-readdir": "^2.0.0",
    "webpack": "^1.13.2"
  },
  "gitHead": "c89e7b7d15fddc325dfd6d868275c73323e0ed3d",
  "homepage": "https://github.com/cambridgesemantics/js-trig-parser#readme",
  "license": "MIT",
  "main": "index.js",
  "name": "js-trig-parser",
  "optionalDependencies": {},
  "readme": "# js-trig-parser\nJS antlr4 based trig to graph/statements.\n\n\n\n##Install\n\n```\nnpm i js-trig-parser\n```\n\numd module included built with webpack\n## Usage\n##### Loaders have the following api's:\n```\nloader.fromFile(filename) //nodejs env only\nloader.fromString(trigStr)\n```\n[Graph Loader](#graph-loader)\n\n[Base Loader](#base-loader)\n\n[Syntax Tree Loader](#syntax-tree-loader)\n\n\n\n\n#### Graph Loader\nOutputs the following trig document\n##### Trig Document\n```\n  {\n\tprefixes: {prefixKey : prefix},\n\tgraphs: [graph],\n\tmacros: [macroResult],\n\terrors: [errorResult],\n\tallGraphs: this.graphs + [defaultGraph],\n\tdefaultGraph: { graph },\n\tgetStatements(): [triple]\n  }\n```\n##### Graph\n\n```\n{\n\tiri: String,\n\turi: String,\n\tpos: {line: int, column: int},\n\t_graph: { ExpandedParseObject },\n\tgetStatements(): [triple]\n\t\n}\t\n```\n\n##### Prefixes\n\n```\n{\n\tname: String,\n\tvalue: String,\n\tpos: {line: int, column: int}\n}\n```\n##### Expanded Parse Object\nThis is a trimmed down and flattened version of the __ANTLR__ parse token\n\n\n\n```\nExpressions(Rules)\n{\n\tpos: {line: int, column: int},\n\tstart: {},\n\tstop: {},\n\ttype: String, //antlr rule name\n\ttoken: String,\n\tchildren: [ExpandedParseObject]\n\t\n}\n\n\nTerminals(Symbols/Literals)\n{\n\tpos: {line: int, column: int},\n\tstart: {},\n\tstop: {},\n\ttype: String, //antlr rule name\n\ttoken: String\n\t\n\t\n}\n```\n\n##### Statement\n```\n{\n\tsubject: String,//prefix expanded form/URI\n\tpredicate: String,\n\tobject: Value(String | Number | boolean),\n\t\n\tiriSubject: String, //original form found in the document\n\tiriPredicate: String,\n\tiriObject: String,\n\t\n\t_s: { ExpandedParseObject },\n\t_p: { ExpandedParseObject },\n\t_o: { ExpandedParseObject },\n\t_g: { ExpandedParseObject },\n\tgraph: { graph }\n}\n```\n\n\n##### Literals\n\n\n###### IRIed literals\nXSD literals are converted to their corresponding types when possible.\n\nSpecial XSD integer types(i.e. non-negative postitive) are bit validated.\n\nNon-standard IRIed literals(\"some literal\"^^some:iri) are treated like strings\nbut the original parser tokens can be retrieved by looking at the _o object on the statement.\nPlanning to clean this up/simply this in a later version.\n\n###### DateTime literals\nDateTime/Date parsed by moment format strings:\n\n\tDateTime: 'YYYY-MM-DD HH:mm:ss Z'\n\tDate: 'YYYY-MM-DDZ'\n\n###### Numeric Values\n\nxsd:decimal or decimal literal are converted using parseFloat.\n\nAnything else is converted to Number using parseInt.\n\n\n#### Keywords Not Currently Supported by GraphLoader\n\t@base\n\tPREFIX/BASE\n\tGRAPH\n\tEXPONENT\n\n\n#### Base Loader\n\n```\n{\n\texpressions: [ExpandedParseObjects],\n\tterminals: [ExpandedParseObjects],\n\terrors: [ParseObjects]\n\t\n}\n```\n#### Syntax Tree Loader\nRaw result of running the ANTLR4 parser using the trigDoc rule on the provided trig file.\n\n```\n{\n\ttree: ANTLR parser trig doc/root rule,\n\tparser: antlrParser\n}\n```\n\n\n##Tests\n\nFor the profiler to work you need to install devutils(chromium nodejs debugging)\n```\nnpm test\nnpm profile\n```\n\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cambridgesemantics/js-trig-parser.git"
  },
  "scripts": {
    "build-umd": "webpack --progress --colors",
    "profile": "./profile.sh",
    "test": "./test.sh"
  },
  "version": "0.3.5"
}
